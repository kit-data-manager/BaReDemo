org.quartz.scheduler.instanceName = DefaultKITDMScheduler
org.quartz.scheduler.skipUpdateCheck = true
org.quartz.scheduler.jmx.export = false

## Can be set to "true" to have the the main thread of the scheduler created as daemon thread.
## Default is "false".
#org.quartz.scheduler.makeSchedulerThreadDaemon = true

## The name of the ThreadPool implementation.
## The thread pool that ships with Quartz is "org.quartz.simpl.SimpleThreadPool".
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 8

## Can be set to "true" to have the threads in the pool created as daemon threads.
## Default is "false".
#org.quartz.threadPool.makeThreadsDaemons = true

## Can be any int between Thread.MIN_PRIORITY (which is 1) and Thread.MAX_PRIORITY (which is 10).
## The default is Thread.NORM_PRIORITY (5).
#org.quartz.threadPool.threadPriority = 5

# Using JobStoreTX
## Be sure to run the appropriate script first to create database/tables
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX

# Configuring JDBCJobStore with the Table Prefix
org.quartz.jobStore.tablePrefix = qrtz_

# Using DriverDelegate
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

# Using datasource
org.quartz.jobStore.dataSource = quartzDataSource

# Define the datasource to use
org.quartz.dataSource.quartzDataSource.driver = org.postgresql.Driver
org.quartz.dataSource.quartzDataSource.URL = jdbc:postgresql://DATABASE:5432/quartz_scheduler
org.quartz.dataSource.quartzDataSource.user = docker
org.quartz.dataSource.quartzDataSource.password = docker
org.quartz.dataSource.quartzDataSource.maxConnections = 30
